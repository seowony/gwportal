# Generated by Django 5.2 on 2025-05-15 08:09

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Filter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("m350", "m350"),
                            ("m375", "m375"),
                            ("m400", "m400"),
                            ("m425", "m425"),
                            ("m450", "m450"),
                            ("m475", "m475"),
                            ("m500", "m500"),
                            ("m525", "m525"),
                            ("m550", "m550"),
                            ("m575", "m575"),
                            ("m600", "m600"),
                            ("m625", "m625"),
                            ("m650", "m650"),
                            ("m675", "m675"),
                            ("m700", "m700"),
                            ("m725", "m725"),
                            ("m750", "m750"),
                            ("m775", "m775"),
                            ("m800", "m800"),
                            ("m825", "m825"),
                            ("m850", "m850"),
                            ("m875", "m875"),
                            ("m900", "m900"),
                            ("m350w", "m350w"),
                            ("m375w", "m375w"),
                            ("m400w", "m400w"),
                            ("m425w", "m425w"),
                            ("m450w", "m450w"),
                            ("m475w", "m475w"),
                            ("m500w", "m500w"),
                            ("m525w", "m525w"),
                            ("m550w", "m550w"),
                            ("m575w", "m575w"),
                            ("m600w", "m600w"),
                            ("m625w", "m625w"),
                            ("m650w", "m650w"),
                            ("m675w", "m675w"),
                            ("m700w", "m700w"),
                            ("m725w", "m725w"),
                            ("m750w", "m750w"),
                            ("m775w", "m775w"),
                            ("m800w", "m800w"),
                            ("m825w", "m825w"),
                            ("m850w", "m850w"),
                            ("m875w", "m875w"),
                            ("m900w", "m900w"),
                            ("u", "Sloan u"),
                            ("g", "Sloan g"),
                            ("r", "Sloan r"),
                            ("i", "Sloan i"),
                            ("z", "Sloan z"),
                        ],
                        max_length=6,
                    ),
                ),
                ("central_wl", models.FloatField()),
                ("width", models.FloatField()),
                (
                    "manufacturer",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "uid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
            ],
            options={
                "ordering": ["central_wl"],
            },
        ),
        migrations.CreateModel(
            name="FilterPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(9),
                        ]
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "filter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="facility.filter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FilterWheel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=20, unique=True)),
                (
                    "current_position",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "filters",
                    models.ManyToManyField(
                        blank=True,
                        through="facility.FilterPosition",
                        to="facility.filter",
                    ),
                ),
            ],
            options={
                "ordering": ["uid"],
            },
        ),
        migrations.AddField(
            model_name="filterposition",
            name="filter_wheel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="facility.filterwheel"
            ),
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=5)),
                ("model", models.CharField(default="DeltaRho 500", max_length=20)),
                ("manufacturer", models.CharField(default="PlaneWave", max_length=20)),
                ("fov", models.FloatField(default=2.62)),
                ("f_ratio", models.FloatField(default=3.0)),
                ("focal_length", models.FloatField(default=232.8)),
                ("weight", models.FloatField(default=75.0)),
                ("diameter", models.FloatField(default=508.0)),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="facility_un_name_d5a1e6_idx"),
                    models.Index(
                        fields=["is_active"], name="facility_un_is_acti_8b96c3_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="filterwheel",
            name="unit",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="filter_wheel",
                to="facility.unit",
            ),
        ),
        migrations.CreateModel(
            name="Camera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("serial_number", models.CharField(max_length=20, unique=True)),
                ("rdnoise", models.FloatField(default=3.5)),
                ("gain", models.FloatField()),
                ("pixel_scale", models.FloatField(default=0.5)),
                ("manufacturer", models.CharField(default="Moravian", max_length=20)),
                ("model", models.CharField(default="C3-61000 Pro", max_length=20)),
                ("pixel_size", models.FloatField(default=3.76)),
                ("fov_a", models.FloatField(default=1.34)),
                ("fov_b", models.FloatField(default=0.9)),
                ("dimension_x", models.IntegerField(default=9576)),
                ("dimension_y", models.IntegerField(default=6388)),
                (
                    "sensor_name",
                    models.CharField(default="Sony IMX455 CMOS", max_length=25),
                ),
                ("byname", models.CharField(blank=True, max_length=15, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_maintenance", models.DateTimeField(blank=True, null=True)),
                ("next_maintenance", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "filter_wheel",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="camera",
                        to="facility.filterwheel",
                    ),
                ),
                (
                    "unit",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="camera",
                        to="facility.unit",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="filterposition",
            unique_together={("filter_wheel", "position", "filter")},
        ),
        migrations.CreateModel(
            name="OperationalStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("operational", "Fully Operational"),
                            ("degraded", "Degraded Performance"),
                            ("maintenance", "Under Maintenance"),
                            ("offline", "Offline"),
                            ("error", "Error State"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "reported_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Operational Statuses",
                "ordering": ["-timestamp"],
                "get_latest_by": "timestamp",
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id", "-timestamp"],
                        name="facility_op_content_14b4e0_idx",
                    ),
                    models.Index(
                        fields=["status", "-timestamp"],
                        name="facility_op_status_e48886_idx",
                    ),
                ],
            },
        ),
    ]
